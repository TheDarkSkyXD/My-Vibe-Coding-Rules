---
description: Ensures AI identifies the underlying business problem before suggesting solutions
globs: *
alwaysApply: true
---

<rule>
name: root-problem-identification
description: Ensures AI identifies the underlying business problem before suggesting solutions

filters:
  - type: event
    pattern: "ai_suggestion_request"
  - type: content
    pattern: "(?i)(fix|implement|change|update|create)"

actions:
  - type: transform
    pattern: "^.*$"
    replacement: |
      # Problem Analysis
      
      ## Business Context
      {infer_business_context_from_request}
      
      ## Underlying Problem
      {extract_root_problem}
      
      ## Requirements
      {explicit_and_implicit_requirements}
      
      # Implementation Plan
      
      {original_content}
    
  - type: suggest
    message: |
      Before implementing a solution:
      
      1. Identify the underlying business problem
      2. Clarify any unstated requirements
      3. Consider alternative approaches
      4. Choose the solution with highest business value and lowest complexity

examples:
  - input: |
      Can you optimize this database query? It's running slowly.
    output: |
      # Problem Analysis
      
      ## Business Context
      This query appears to be affecting application performance, potentially impacting user experience or system reliability.
      
      ## Underlying Problem
      The database query is performing inefficiently, likely due to missing indexes, suboptimal join conditions, or retrieving unnecessary data.
      
      ## Requirements
      - Improve query performance
      - Maintain exact same result set
      - No schema changes unless absolutely necessary
      
      # Implementation Plan
      
      Let me analyze this query to find optimization opportunities...

metadata:
  priority: critical
  version: 1.0
</rule>
